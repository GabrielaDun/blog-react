{"ast":null,"code":"import shortid from 'shortid';\n\n//selectors\nexport const getAllPosts = state => state.posts;\nexport const getPostsById = (_ref, postId) => {\n  let {\n    posts\n  } = _ref;\n  return posts.find(post => post.id === postId);\n};\n\n// actions\nconst createActionName = actionName => `app/posts/${actionName}`;\nconst DELETE_POST = createActionName('DELETE_POST');\nconst ADD_POST = createActionName('ADD_POST');\n\n// action creators\nexport const deletePost = payload => ({\n  type: DELETE_POST,\n  payload\n});\nexport const addPost = payload => ({\n  type: ADD_POST,\n  payload\n});\nconst postsReducer = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case DELETE_POST:\n      return [...statePart.filter(posts => posts.id !== action.payload)];\n    case ADD_POST:\n      return [...statePart, {\n        ...action.payload,\n        id: shortid()\n      }];\n    default:\n      return statePart;\n  }\n  ;\n};\nexport default postsReducer;","map":{"version":3,"names":["shortid","getAllPosts","state","posts","getPostsById","_ref","postId","find","post","id","createActionName","actionName","DELETE_POST","ADD_POST","deletePost","payload","type","addPost","postsReducer","statePart","arguments","length","undefined","action","filter"],"sources":["/Users/gabriela/blog-react/blog-react/src/redux/postsRedux.js"],"sourcesContent":["import shortid from 'shortid';\n\n//selectors\nexport const getAllPosts = state => state.posts;\nexport const getPostsById = ({ posts }, postId) => posts.find(post => post.id === postId)\n\n// actions\nconst createActionName = actionName => `app/posts/${actionName}`;\nconst DELETE_POST = createActionName('DELETE_POST')\nconst ADD_POST = createActionName('ADD_POST')\n\n// action creators\nexport const deletePost = payload => ({type: DELETE_POST, payload});\nexport const addPost = payload => ({type: ADD_POST, payload});\n\nconst postsReducer = (statePart = [], action) => {\n  switch (action.type) {\n    case DELETE_POST:\n      return [...statePart.filter(posts => posts.id !== action.payload)];\n    case ADD_POST:\n      return [...statePart,{ ...action.payload, id: shortid() }];\n\n    default:\n      return statePart;\n  }; \n};\n\nexport default postsReducer;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;;AAE7B;AACA,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAIA,KAAK,CAACC,KAAK;AAC/C,OAAO,MAAMC,YAAY,GAAGA,CAAAC,IAAA,EAAYC,MAAM;EAAA,IAAjB;IAAEH;EAAM,CAAC,GAAAE,IAAA;EAAA,OAAaF,KAAK,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,MAAM,CAAC;AAAA;;AAEzF;AACA,MAAMI,gBAAgB,GAAGC,UAAU,IAAK,aAAYA,UAAW,EAAC;AAChE,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,aAAa,CAAC;AACnD,MAAMG,QAAQ,GAAGH,gBAAgB,CAAC,UAAU,CAAC;;AAE7C;AACA,OAAO,MAAMI,UAAU,GAAGC,OAAO,KAAK;EAACC,IAAI,EAAEJ,WAAW;EAAEG;AAAO,CAAC,CAAC;AACnE,OAAO,MAAME,OAAO,GAAGF,OAAO,KAAK;EAACC,IAAI,EAAEH,QAAQ;EAAEE;AAAO,CAAC,CAAC;AAE7D,MAAMG,YAAY,GAAG,SAAAA,CAAA,EAA4B;EAAA,IAA3BC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1C,QAAQC,MAAM,CAACP,IAAI;IACjB,KAAKJ,WAAW;MACd,OAAO,CAAC,GAAGO,SAAS,CAACK,MAAM,CAACrB,KAAK,IAAIA,KAAK,CAACM,EAAE,KAAKc,MAAM,CAACR,OAAO,CAAC,CAAC;IACpE,KAAKF,QAAQ;MACX,OAAO,CAAC,GAAGM,SAAS,EAAC;QAAE,GAAGI,MAAM,CAACR,OAAO;QAAEN,EAAE,EAAET,OAAO,CAAC;MAAE,CAAC,CAAC;IAE5D;MACE,OAAOmB,SAAS;EACpB;EAAC;AACH,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}